// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CivGrid renders correctly 1`] = `
<div
  className="columns is-mobile"
>
  <Connect(I18nextWithTranslation)
    key="HOST"
    name="Sneaky Saladin"
    player="HOST"
    preset={
      Preset {
        "encodedCivilisations": "7ffffffff",
        "name": "Default Preset",
        "turns": Array [
          Turn {
            "action": "BAN",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "BAN",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "BAN",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "BAN",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "NONE",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "EXCLUSIVE",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "EXCLUSIVE",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "NONE",
          },
          Turn {
            "action": "SNIPE",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "SNIPE",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "NONE",
          },
        ],
      }
    }
  />
  <Connect(I18nextWithTranslation)
    key="GUEST"
    name="Beastly Barbarossa"
    player="GUEST"
    preset={
      Preset {
        "encodedCivilisations": "7ffffffff",
        "name": "Default Preset",
        "turns": Array [
          Turn {
            "action": "BAN",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "BAN",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "BAN",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "BAN",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "NONE",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "EXCLUSIVE",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "EXCLUSIVE",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "PICK",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "NONE",
          },
          Turn {
            "action": "SNIPE",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "HOST",
          },
          Turn {
            "action": "SNIPE",
            "exclusivity": "NONEXCLUSIVE",
            "hidden": true,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "exclusivity": "GLOBAL",
            "hidden": false,
            "id": "mocked-uuid",
            "parallel": false,
            "player": "NONE",
          },
        ],
      }
    }
  />
</div>
`;
